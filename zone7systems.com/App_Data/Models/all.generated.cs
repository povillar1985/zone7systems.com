using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "dbd2a4749646d7d0")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.1")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Home</summary>
	[PublishedContentModel("home")]
	public partial class Home : PublishedContentModel, IContactBase, IContentBase, INavigationBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Favicon
		///</summary>
		[ImplementPropertyType("favicon")]
		public IPublishedContent Favicon
		{
			get { return this.GetPropertyValue<IPublishedContent>("favicon"); }
		}

		///<summary>
		/// Logo
		///</summary>
		[ImplementPropertyType("logo")]
		public IPublishedContent Logo
		{
			get { return this.GetPropertyValue<IPublishedContent>("logo"); }
		}

		///<summary>
		/// Sliders
		///</summary>
		[ImplementPropertyType("sliders")]
		public IEnumerable<IPublishedContent> Sliders
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("sliders"); }
		}

		///<summary>
		/// Address 1: Building#, Street & City
		///</summary>
		[ImplementPropertyType("address1")]
		public string Address1
		{
			get { return Umbraco.Web.PublishedContentModels.ContactBase.GetAddress1(this); }
		}

		///<summary>
		/// Address 2: Province, Country & Post Code
		///</summary>
		[ImplementPropertyType("address2")]
		public string Address2
		{
			get { return Umbraco.Web.PublishedContentModels.ContactBase.GetAddress2(this); }
		}

		///<summary>
		/// Email
		///</summary>
		[ImplementPropertyType("email")]
		public string Email
		{
			get { return Umbraco.Web.PublishedContentModels.ContactBase.GetEmail(this); }
		}

		///<summary>
		/// Embedded Social Page
		///</summary>
		[ImplementPropertyType("embeddedSocialPage")]
		public string EmbeddedSocialPage
		{
			get { return Umbraco.Web.PublishedContentModels.ContactBase.GetEmbeddedSocialPage(this); }
		}

		///<summary>
		/// Fax
		///</summary>
		[ImplementPropertyType("fax")]
		public string Fax
		{
			get { return Umbraco.Web.PublishedContentModels.ContactBase.GetFax(this); }
		}

		///<summary>
		/// Google Map Link
		///</summary>
		[ImplementPropertyType("googleMapLink")]
		public string GoogleMapLink
		{
			get { return Umbraco.Web.PublishedContentModels.ContactBase.GetGoogleMapLink(this); }
		}

		///<summary>
		/// Phone
		///</summary>
		[ImplementPropertyType("phone")]
		public string Phone
		{
			get { return Umbraco.Web.PublishedContentModels.ContactBase.GetPhone(this); }
		}

		///<summary>
		/// Work Hours
		///</summary>
		[ImplementPropertyType("workHours")]
		public string WorkHours
		{
			get { return Umbraco.Web.PublishedContentModels.ContactBase.GetWorkHours(this); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetChildMenusEnabled(this); }
		}

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetDescription(this); }
		}

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetHideInNavigation(this); }
		}

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetKeywords(this); }
		}
	}

	/// <summary>Product</summary>
	[PublishedContentModel("product")]
	public partial class Product : PublishedContentModel, IContentBase, INavigationBase, ISliderBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "product";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Product(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Product, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetChildMenusEnabled(this); }
		}

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetDescription(this); }
		}

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetHideInNavigation(this); }
		}

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetKeywords(this); }
		}

		///<summary>
		/// Slider Description
		///</summary>
		[ImplementPropertyType("sliderDescription")]
		public string SliderDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderDescription(this); }
		}

		///<summary>
		/// Slider Images
		///</summary>
		[ImplementPropertyType("sliderImages")]
		public IEnumerable<IPublishedContent> SliderImages
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderImages(this); }
		}

		///<summary>
		/// Slider Title
		///</summary>
		[ImplementPropertyType("sliderTitle")]
		public string SliderTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderTitle(this); }
		}
	}

	/// <summary>Products</summary>
	[PublishedContentModel("products")]
	public partial class Products : PublishedContentModel, IContentBase, INavigationBase, ISliderBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "products";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Products(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Products, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetChildMenusEnabled(this); }
		}

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetDescription(this); }
		}

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetHideInNavigation(this); }
		}

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetKeywords(this); }
		}

		///<summary>
		/// Slider Description
		///</summary>
		[ImplementPropertyType("sliderDescription")]
		public string SliderDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderDescription(this); }
		}

		///<summary>
		/// Slider Images
		///</summary>
		[ImplementPropertyType("sliderImages")]
		public IEnumerable<IPublishedContent> SliderImages
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderImages(this); }
		}

		///<summary>
		/// Slider Title
		///</summary>
		[ImplementPropertyType("sliderTitle")]
		public string SliderTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderTitle(this); }
		}
	}

	// Mixin content Type 1060 with alias "navigationBase"
	/// <summary>Navigation Base</summary>
	public partial interface INavigationBase : IPublishedContent
	{
		/// <summary>Child Menus Enabled</summary>
		bool ChildMenusEnabled { get; }

		/// <summary>Description</summary>
		string Description { get; }

		/// <summary>Hide in Navigation</summary>
		bool HideInNavigation { get; }

		/// <summary>Keywords</summary>
		IEnumerable<string> Keywords { get; }
	}

	/// <summary>Navigation Base</summary>
	[PublishedContentModel("navigationBase")]
	public partial class NavigationBase : PublishedContentModel, INavigationBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "navigationBase";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NavigationBase(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NavigationBase, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return GetChildMenusEnabled(this); }
		}

		/// <summary>Static getter for Child Menus Enabled</summary>
		public static bool GetChildMenusEnabled(INavigationBase that) { return that.GetPropertyValue<bool>("childMenusEnabled"); }

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return GetDescription(this); }
		}

		/// <summary>Static getter for Description</summary>
		public static string GetDescription(INavigationBase that) { return that.GetPropertyValue<string>("description"); }

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return GetHideInNavigation(this); }
		}

		/// <summary>Static getter for Hide in Navigation</summary>
		public static bool GetHideInNavigation(INavigationBase that) { return that.GetPropertyValue<bool>("hideInNavigation"); }

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return GetKeywords(this); }
		}

		/// <summary>Static getter for Keywords</summary>
		public static IEnumerable<string> GetKeywords(INavigationBase that) { return that.GetPropertyValue<IEnumerable<string>>("keywords"); }
	}

	// Mixin content Type 1067 with alias "contentBase"
	/// <summary>Content Base</summary>
	public partial interface IContentBase : IPublishedContent
	{
		/// <summary>Image</summary>
		IPublishedContent Image { get; }

		/// <summary>Is Featured</summary>
		bool IsFeatured { get; }

		/// <summary>Page Content</summary>
		IHtmlString PageContent { get; }

		/// <summary>Page Description</summary>
		string PageDescription { get; }

		/// <summary>Page Title</summary>
		string PageTitle { get; }

		/// <summary>Social Links</summary>
		Umbraco.Web.Models.RelatedLinks SocialLinks { get; }
	}

	/// <summary>Content Base</summary>
	[PublishedContentModel("contentBase")]
	public partial class ContentBase : PublishedContentModel, IContentBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contentBase";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContentBase(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContentBase, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return GetImage(this); }
		}

		/// <summary>Static getter for Image</summary>
		public static IPublishedContent GetImage(IContentBase that) { return that.GetPropertyValue<IPublishedContent>("image"); }

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return GetIsFeatured(this); }
		}

		/// <summary>Static getter for Is Featured</summary>
		public static bool GetIsFeatured(IContentBase that) { return that.GetPropertyValue<bool>("isFeatured"); }

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return GetPageContent(this); }
		}

		/// <summary>Static getter for Page Content</summary>
		public static IHtmlString GetPageContent(IContentBase that) { return that.GetPropertyValue<IHtmlString>("pageContent"); }

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return GetPageDescription(this); }
		}

		/// <summary>Static getter for Page Description</summary>
		public static string GetPageDescription(IContentBase that) { return that.GetPropertyValue<string>("pageDescription"); }

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return GetPageTitle(this); }
		}

		/// <summary>Static getter for Page Title</summary>
		public static string GetPageTitle(IContentBase that) { return that.GetPropertyValue<string>("pageTitle"); }

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return GetSocialLinks(this); }
		}

		/// <summary>Static getter for Social Links</summary>
		public static Umbraco.Web.Models.RelatedLinks GetSocialLinks(IContentBase that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("socialLinks"); }
	}

	// Mixin content Type 1068 with alias "sliderBase"
	/// <summary>Slider Base</summary>
	public partial interface ISliderBase : IPublishedContent
	{
		/// <summary>Slider Description</summary>
		string SliderDescription { get; }

		/// <summary>Slider Images</summary>
		IEnumerable<IPublishedContent> SliderImages { get; }

		/// <summary>Slider Title</summary>
		string SliderTitle { get; }
	}

	/// <summary>Slider Base</summary>
	[PublishedContentModel("sliderBase")]
	public partial class SliderBase : PublishedContentModel, ISliderBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "sliderBase";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SliderBase(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SliderBase, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Slider Description
		///</summary>
		[ImplementPropertyType("sliderDescription")]
		public string SliderDescription
		{
			get { return GetSliderDescription(this); }
		}

		/// <summary>Static getter for Slider Description</summary>
		public static string GetSliderDescription(ISliderBase that) { return that.GetPropertyValue<string>("sliderDescription"); }

		///<summary>
		/// Slider Images
		///</summary>
		[ImplementPropertyType("sliderImages")]
		public IEnumerable<IPublishedContent> SliderImages
		{
			get { return GetSliderImages(this); }
		}

		/// <summary>Static getter for Slider Images</summary>
		public static IEnumerable<IPublishedContent> GetSliderImages(ISliderBase that) { return that.GetPropertyValue<IEnumerable<IPublishedContent>>("sliderImages"); }

		///<summary>
		/// Slider Title
		///</summary>
		[ImplementPropertyType("sliderTitle")]
		public string SliderTitle
		{
			get { return GetSliderTitle(this); }
		}

		/// <summary>Static getter for Slider Title</summary>
		public static string GetSliderTitle(ISliderBase that) { return that.GetPropertyValue<string>("sliderTitle"); }
	}

	// Mixin content Type 1070 with alias "contactBase"
	/// <summary>Contact Base</summary>
	public partial interface IContactBase : IPublishedContent
	{
		/// <summary>Address 1</summary>
		string Address1 { get; }

		/// <summary>Address 2</summary>
		string Address2 { get; }

		/// <summary>Email</summary>
		string Email { get; }

		/// <summary>Embedded Social Page</summary>
		string EmbeddedSocialPage { get; }

		/// <summary>Fax</summary>
		string Fax { get; }

		/// <summary>Google Map Link</summary>
		string GoogleMapLink { get; }

		/// <summary>Phone</summary>
		string Phone { get; }

		/// <summary>Work Hours</summary>
		string WorkHours { get; }
	}

	/// <summary>Contact Base</summary>
	[PublishedContentModel("contactBase")]
	public partial class ContactBase : PublishedContentModel, IContactBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contactBase";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContactBase(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContactBase, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Address 1: Building#, Street & City
		///</summary>
		[ImplementPropertyType("address1")]
		public string Address1
		{
			get { return GetAddress1(this); }
		}

		/// <summary>Static getter for Address 1</summary>
		public static string GetAddress1(IContactBase that) { return that.GetPropertyValue<string>("address1"); }

		///<summary>
		/// Address 2: Province, Country & Post Code
		///</summary>
		[ImplementPropertyType("address2")]
		public string Address2
		{
			get { return GetAddress2(this); }
		}

		/// <summary>Static getter for Address 2</summary>
		public static string GetAddress2(IContactBase that) { return that.GetPropertyValue<string>("address2"); }

		///<summary>
		/// Email
		///</summary>
		[ImplementPropertyType("email")]
		public string Email
		{
			get { return GetEmail(this); }
		}

		/// <summary>Static getter for Email</summary>
		public static string GetEmail(IContactBase that) { return that.GetPropertyValue<string>("email"); }

		///<summary>
		/// Embedded Social Page
		///</summary>
		[ImplementPropertyType("embeddedSocialPage")]
		public string EmbeddedSocialPage
		{
			get { return GetEmbeddedSocialPage(this); }
		}

		/// <summary>Static getter for Embedded Social Page</summary>
		public static string GetEmbeddedSocialPage(IContactBase that) { return that.GetPropertyValue<string>("embeddedSocialPage"); }

		///<summary>
		/// Fax
		///</summary>
		[ImplementPropertyType("fax")]
		public string Fax
		{
			get { return GetFax(this); }
		}

		/// <summary>Static getter for Fax</summary>
		public static string GetFax(IContactBase that) { return that.GetPropertyValue<string>("fax"); }

		///<summary>
		/// Google Map Link
		///</summary>
		[ImplementPropertyType("googleMapLink")]
		public string GoogleMapLink
		{
			get { return GetGoogleMapLink(this); }
		}

		/// <summary>Static getter for Google Map Link</summary>
		public static string GetGoogleMapLink(IContactBase that) { return that.GetPropertyValue<string>("googleMapLink"); }

		///<summary>
		/// Phone
		///</summary>
		[ImplementPropertyType("phone")]
		public string Phone
		{
			get { return GetPhone(this); }
		}

		/// <summary>Static getter for Phone</summary>
		public static string GetPhone(IContactBase that) { return that.GetPropertyValue<string>("phone"); }

		///<summary>
		/// Work Hours
		///</summary>
		[ImplementPropertyType("workHours")]
		public string WorkHours
		{
			get { return GetWorkHours(this); }
		}

		/// <summary>Static getter for Work Hours</summary>
		public static string GetWorkHours(IContactBase that) { return that.GetPropertyValue<string>("workHours"); }
	}

	/// <summary>Contact Form</summary>
	[PublishedContentModel("contactForm")]
	public partial class ContactForm : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contactForm";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContactForm(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContactForm, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Email
		///</summary>
		[ImplementPropertyType("email")]
		public string Email
		{
			get { return this.GetPropertyValue<string>("email"); }
		}

		///<summary>
		/// Full Name
		///</summary>
		[ImplementPropertyType("fullName")]
		public string FullName
		{
			get { return this.GetPropertyValue<string>("fullName"); }
		}

		///<summary>
		/// Message
		///</summary>
		[ImplementPropertyType("message")]
		public string Message
		{
			get { return this.GetPropertyValue<string>("message"); }
		}

		///<summary>
		/// Phone
		///</summary>
		[ImplementPropertyType("phone")]
		public string Phone
		{
			get { return this.GetPropertyValue<string>("phone"); }
		}
	}

	/// <summary>Contact Page</summary>
	[PublishedContentModel("contactPage")]
	public partial class ContactPage : PublishedContentModel, IContentBase, ISliderBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contactPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContactPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContactPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Slider Description
		///</summary>
		[ImplementPropertyType("sliderDescription")]
		public string SliderDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderDescription(this); }
		}

		///<summary>
		/// Slider Images
		///</summary>
		[ImplementPropertyType("sliderImages")]
		public IEnumerable<IPublishedContent> SliderImages
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderImages(this); }
		}

		///<summary>
		/// Slider Title
		///</summary>
		[ImplementPropertyType("sliderTitle")]
		public string SliderTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderTitle(this); }
		}
	}

	/// <summary>Services</summary>
	[PublishedContentModel("services")]
	public partial class Services : PublishedContentModel, IContentBase, INavigationBase, ISliderBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "services";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Services(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Services, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetChildMenusEnabled(this); }
		}

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetDescription(this); }
		}

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetHideInNavigation(this); }
		}

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetKeywords(this); }
		}

		///<summary>
		/// Slider Description
		///</summary>
		[ImplementPropertyType("sliderDescription")]
		public string SliderDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderDescription(this); }
		}

		///<summary>
		/// Slider Images
		///</summary>
		[ImplementPropertyType("sliderImages")]
		public IEnumerable<IPublishedContent> SliderImages
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderImages(this); }
		}

		///<summary>
		/// Slider Title
		///</summary>
		[ImplementPropertyType("sliderTitle")]
		public string SliderTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderTitle(this); }
		}
	}

	/// <summary>Service</summary>
	[PublishedContentModel("service")]
	public partial class Service : PublishedContentModel, IContentBase, INavigationBase, ISliderBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "service";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Service(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Service, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetChildMenusEnabled(this); }
		}

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetDescription(this); }
		}

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetHideInNavigation(this); }
		}

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetKeywords(this); }
		}

		///<summary>
		/// Slider Description
		///</summary>
		[ImplementPropertyType("sliderDescription")]
		public string SliderDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderDescription(this); }
		}

		///<summary>
		/// Slider Images
		///</summary>
		[ImplementPropertyType("sliderImages")]
		public IEnumerable<IPublishedContent> SliderImages
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderImages(this); }
		}

		///<summary>
		/// Slider Title
		///</summary>
		[ImplementPropertyType("sliderTitle")]
		public string SliderTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderTitle(this); }
		}
	}

	/// <summary>About Page</summary>
	[PublishedContentModel("aboutPage")]
	public partial class AboutPage : PublishedContentModel, IContentBase, INavigationBase, ISliderBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "aboutPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public AboutPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<AboutPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Team Mates
		///</summary>
		[ImplementPropertyType("teamMates")]
		public IEnumerable<IPublishedContent> TeamMates
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("teamMates"); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetChildMenusEnabled(this); }
		}

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetDescription(this); }
		}

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetHideInNavigation(this); }
		}

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetKeywords(this); }
		}

		///<summary>
		/// Slider Description
		///</summary>
		[ImplementPropertyType("sliderDescription")]
		public string SliderDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderDescription(this); }
		}

		///<summary>
		/// Slider Images
		///</summary>
		[ImplementPropertyType("sliderImages")]
		public IEnumerable<IPublishedContent> SliderImages
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderImages(this); }
		}

		///<summary>
		/// Slider Title
		///</summary>
		[ImplementPropertyType("sliderTitle")]
		public string SliderTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderTitle(this); }
		}
	}

	/// <summary>Projects</summary>
	[PublishedContentModel("projects")]
	public partial class Projects : PublishedContentModel, IContentBase, INavigationBase, ISliderBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "projects";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Projects(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Projects, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetChildMenusEnabled(this); }
		}

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetDescription(this); }
		}

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetHideInNavigation(this); }
		}

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetKeywords(this); }
		}

		///<summary>
		/// Slider Description
		///</summary>
		[ImplementPropertyType("sliderDescription")]
		public string SliderDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderDescription(this); }
		}

		///<summary>
		/// Slider Images
		///</summary>
		[ImplementPropertyType("sliderImages")]
		public IEnumerable<IPublishedContent> SliderImages
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderImages(this); }
		}

		///<summary>
		/// Slider Title
		///</summary>
		[ImplementPropertyType("sliderTitle")]
		public string SliderTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderTitle(this); }
		}
	}

	/// <summary>Project</summary>
	[PublishedContentModel("project")]
	public partial class Project : PublishedContentModel, IContentBase, INavigationBase, ISliderBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "project";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Project(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Project, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetChildMenusEnabled(this); }
		}

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetDescription(this); }
		}

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetHideInNavigation(this); }
		}

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetKeywords(this); }
		}

		///<summary>
		/// Slider Description
		///</summary>
		[ImplementPropertyType("sliderDescription")]
		public string SliderDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderDescription(this); }
		}

		///<summary>
		/// Slider Images
		///</summary>
		[ImplementPropertyType("sliderImages")]
		public IEnumerable<IPublishedContent> SliderImages
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderImages(this); }
		}

		///<summary>
		/// Slider Title
		///</summary>
		[ImplementPropertyType("sliderTitle")]
		public string SliderTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderTitle(this); }
		}
	}

	/// <summary>Team Base</summary>
	[PublishedContentModel("teamBase")]
	public partial class TeamBase : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "teamBase";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TeamBase(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TeamBase, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return this.GetPropertyValue<string>("description"); }
		}

		///<summary>
		/// Full Name
		///</summary>
		[ImplementPropertyType("fullName")]
		public string FullName
		{
			get { return this.GetPropertyValue<string>("fullName"); }
		}

		///<summary>
		/// Photo
		///</summary>
		[ImplementPropertyType("photo")]
		public IPublishedContent Photo
		{
			get { return this.GetPropertyValue<IPublishedContent>("photo"); }
		}

		///<summary>
		/// Position
		///</summary>
		[ImplementPropertyType("position")]
		public string Position
		{
			get { return this.GetPropertyValue<string>("position"); }
		}

		///<summary>
		/// Socials
		///</summary>
		[ImplementPropertyType("socials")]
		public Umbraco.Web.Models.RelatedLinks Socials
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("socials"); }
		}
	}

	/// <summary>Content Page</summary>
	[PublishedContentModel("contentPage")]
	public partial class ContentPage : PublishedContentModel, IContentBase, INavigationBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contentPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContentPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContentPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetChildMenusEnabled(this); }
		}

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetDescription(this); }
		}

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetHideInNavigation(this); }
		}

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetKeywords(this); }
		}
	}

	/// <summary>Customers</summary>
	[PublishedContentModel("customers")]
	public partial class Customers : PublishedContentModel, IContentBase, INavigationBase, ISliderBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "customers";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Customers(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Customers, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetChildMenusEnabled(this); }
		}

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetDescription(this); }
		}

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetHideInNavigation(this); }
		}

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetKeywords(this); }
		}

		///<summary>
		/// Slider Description
		///</summary>
		[ImplementPropertyType("sliderDescription")]
		public string SliderDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderDescription(this); }
		}

		///<summary>
		/// Slider Images
		///</summary>
		[ImplementPropertyType("sliderImages")]
		public IEnumerable<IPublishedContent> SliderImages
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderImages(this); }
		}

		///<summary>
		/// Slider Title
		///</summary>
		[ImplementPropertyType("sliderTitle")]
		public string SliderTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderTitle(this); }
		}
	}

	/// <summary>Customer</summary>
	[PublishedContentModel("customer")]
	public partial class Customer : PublishedContentModel, IContentBase, ISliderBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "customer";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Customer(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Customer, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetImage(this); }
		}

		///<summary>
		/// Is Featured
		///</summary>
		[ImplementPropertyType("isFeatured")]
		public bool IsFeatured
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetIsFeatured(this); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageContent(this); }
		}

		///<summary>
		/// Page Description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageDescription(this); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetPageTitle(this); }
		}

		///<summary>
		/// Social Links
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.ContentBase.GetSocialLinks(this); }
		}

		///<summary>
		/// Slider Description
		///</summary>
		[ImplementPropertyType("sliderDescription")]
		public string SliderDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderDescription(this); }
		}

		///<summary>
		/// Slider Images
		///</summary>
		[ImplementPropertyType("sliderImages")]
		public IEnumerable<IPublishedContent> SliderImages
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderImages(this); }
		}

		///<summary>
		/// Slider Title
		///</summary>
		[ImplementPropertyType("sliderTitle")]
		public string SliderTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SliderBase.GetSliderTitle(this); }
		}
	}

	/// <summary>Search</summary>
	[PublishedContentModel("search")]
	public partial class Search : PublishedContentModel, INavigationBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "search";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Search(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Search, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Child Menus Enabled
		///</summary>
		[ImplementPropertyType("childMenusEnabled")]
		public bool ChildMenusEnabled
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetChildMenusEnabled(this); }
		}

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetDescription(this); }
		}

		///<summary>
		/// Hide in Navigation: If you don't want this page to appear in the navigation, check this box
		///</summary>
		[ImplementPropertyType("hideInNavigation")]
		public bool HideInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetHideInNavigation(this); }
		}

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consider optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationBase.GetKeywords(this); }
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public string UmbracoFile
		{
			get { return this.GetPropertyValue<string>("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
